#!/bin/bash
set -u -e -C;
shopt -s nullglob;

function err { echo $'\e[1;31m'"$@"$'\e[m' >&2; exit 1; }
function warn { echo $'\e[1;35m'"$@"$'\e[m' >&2; }
function info { echo $'\e[36m'"$@"$'\e[m'; }

function ask_yN {
    local answer='';
    read -n 1 -s -p $'\e[34m'"$* [yN]"$'\e[m' answer;
    if test "${answer}" = y; then
        info yes;
        return 0;
    fi;
    info no;
    return 1;
}

while read -u3 old; do
    if ask_yN "Close ${old}?"; then
        info "Closing: ${old}";
        umount "/dev/mapper/${old}" || warn "Failed: umount /dev/mapper/${old}";
        cryptsetup close "$old" || warn "Failed: cryptsetup close ${old}";
        exit;
    fi;
done 3< <(dmsetup ls --target crypt | grep luks | sed -E 's/\s.*//')

until
    read -e -i "${dev-}" -p 'device = ' dev;
    test -r "$dev";
do
    warn "Not readable: $dev";
done;

until
    read -e -i "${mnt-}" -p 'mountpoint = ' mnt
    test -d "$mnt";
do
    if test -z "${mnt}"; then
        mnt="$(mktemp -t -d mnt.XXXXXXXXXXXXXXX)";
        warn "Created mountpoint ${mnt}";
    fi;
done;

read -ep 'keyfile = ' keyfile

map="$(basename "${dev}").$(mktemp -u XXXXXXXXXXXXXXX).luks"

if test "${keyfile}"; then
    cryptsetup open "${dev}" "${map}" --type luks --key-file "${keyfile}";
else
    cryptsetup open "${dev}" "${map}" --type luks;
fi || err 'Failed: cryptsetup open';
if mount "/dev/mapper/${map}" "${mnt}"; then
    info "Success.";
else
    cryptsetup close "$map" || warn 'Failed: cryptsetup close';
    err 'Failed: mount';
fi;
