#!/bin/bash
# Copyright 2019 Stefan Klinger <http://stefan-klinger.de>
set -u -e -C;
shopt -s nullglob;

function err { echo "$@" >&2; exit 1; }
function warn { echo "$@" >&2; }

function ask_yN {
    local answer='';
    read -n 1 -s -p "$* [yN]" answer;
    if test "${answer}" = y; then
        echo yes;
        return 0;
    fi;
    echo no;
    return 1;
}

if ! test "${2-}"; then
    cat <<'EOF'

Show PDF differences, rather ad-hoc, YMMV.

    pdfDiff <file1> <file2> [<offset>]

Each page of the two PDF files is rendered into a PNG image.  Then the
corresponding page images (shifted by an optional offset), are
combined into difference images.

   difference_page n := file1_page (n + offset) >< file2_page n

The difference operation `><` is `gm composite -compose difference`.
Then `geeqie` is launched to review the resulting images.  An all
black image indicates no differences.

EOF
    exit
fi

dir="$(mktemp -t -d 'pdfDiff.XXXXXXXXXX')";

n1="$(basename "$1" .pdf)";
d1="${dir}/a-${n1}";
mkdir "${d1}";
pdftocairo -png "$1" "${d1}/page"&
echo "Launched \`pdftocairo ${n1}.pdf\`, PID=$!";

n2="$(basename "$2" .pdf)";
d2="${dir}/b-${n2}";
mkdir "${d2}";
pdftocairo -png "$2" "${d2}/page"&
echo "Launched \`pdftocairo ${n2}.pdf\`, PID=$!";

echo 'Waiting for images to be created...';
wait;

echo 'Renumbering pages...';
pushd "$d1";
ls | sed -rn 's/^page-0*([1-9][0-9]*).png$/printf "mv & %08d.png\n" "\1"/p' | sh | sh&
popd;
pushd "$d2";
ls | sed -rn 's/^page-0*([1-9][0-9]*).png$/printf "mv & %08d.png\n" "\1"/p' | sh | sh&
popd;

wait;


cat <<EOF
Images created below \`${dir}\`.
EOF

if diff <(ls "$d1") <(ls "$d2") > "${dir}/pagediff"; then
    rm "${dir}/pagediff";
    echo 'Same amount of pages found.';
else
    cat <<EOF
Different number of pages, see \`${dir}/pagediff\`.
EOF
fi;

declare -i p="$(nproc)";

declare -i in1="$(ls "$d1" | wc -l)"
declare -i in2="$(ls "$d2" | wc -l)"

declare -i off="${3-0}"; # 3rd argument is offset, or 0
in2="$((in2 + off))"
declare -i tot="$(( in1 > in2 ? in1 : in2 ))"


for (( n = 0; n < tot; n++ )); do
    printf -v i1 '%s/%08d.png' "${d1}" "$((n + off))"
    printf -v i2 '%s/%08d.png' "${d2}" "${n}"
    printf -v o  '%s/%08d-%08d.png' "${dir}" "$((n + off))" "${n}"
    if test -e "$i1" -a -e "$i2"; then
        if test "$p" -gt 0; then
            p="$((p - 1))";
        else
            wait -n;
        fi;
        gm composite -compose difference "${i1}" "${i2}" "${o}" &
    fi;
done;

echo 'Waiting for image subtraction to finish...';
wait;

#rm -r "${d1}" "${d2}";

geeqie "${dir}" &

cat <<EOF
____________________________________________________________
Listing of difference images, see \`${dir}\`:
EOF
ls -l --sort=size -r "${dir}";

echo Done;
